/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    input a_button,
    input b_button,
    input c_button,
    input d_button,
    input next_player_button,
    output reg [6:0] option_a,
    output reg [1:0] option_a_sel,
    output reg [6:0] option_b,
    output reg [1:0] option_b_sel,
    output reg [6:0] option_c,
    output reg [1:0] option_c_sel,
    output reg [6:0] option_d,
    output reg [1:0] option_d_sel,
    output reg [6:0] current,
    output reg [1:0] current_sel,
    output reg [6:0] target,
    output reg [1:0] target_sel
  );
  
  
  
  reg rst;
  
  wire [4-1:0] M_lookup_out_a;
  wire [4-1:0] M_lookup_out_a1;
  wire [4-1:0] M_lookup_out_b;
  wire [4-1:0] M_lookup_out_b1;
  wire [4-1:0] M_lookup_out_c;
  wire [4-1:0] M_lookup_out_c1;
  wire [4-1:0] M_lookup_out_d;
  wire [4-1:0] M_lookup_out_d1;
  wire [4-1:0] M_lookup_out_current;
  wire [4-1:0] M_lookup_out_current1;
  wire [4-1:0] M_lookup_out_target;
  wire [4-1:0] M_lookup_out_target1;
  reg [4-1:0] M_lookup_invalue_a;
  reg [4-1:0] M_lookup_invalue_b;
  reg [4-1:0] M_lookup_invalue_c;
  reg [4-1:0] M_lookup_invalue_d;
  reg [7-1:0] M_lookup_invalue_current;
  reg [7-1:0] M_lookup_invalue_target;
  lookuptable_1 lookup (
    .invalue_a(M_lookup_invalue_a),
    .invalue_b(M_lookup_invalue_b),
    .invalue_c(M_lookup_invalue_c),
    .invalue_d(M_lookup_invalue_d),
    .invalue_current(M_lookup_invalue_current),
    .invalue_target(M_lookup_invalue_target),
    .out_a(M_lookup_out_a),
    .out_a1(M_lookup_out_a1),
    .out_b(M_lookup_out_b),
    .out_b1(M_lookup_out_b1),
    .out_c(M_lookup_out_c),
    .out_c1(M_lookup_out_c1),
    .out_d(M_lookup_out_d),
    .out_d1(M_lookup_out_d1),
    .out_current(M_lookup_out_current),
    .out_current1(M_lookup_out_current1),
    .out_target(M_lookup_out_target),
    .out_target1(M_lookup_out_target1)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [7-1:0] M_ge_current_out;
  wire [7-1:0] M_ge_target_display;
  wire [4-1:0] M_ge_a_display;
  wire [4-1:0] M_ge_b_display;
  wire [4-1:0] M_ge_c_display;
  wire [4-1:0] M_ge_d_display;
  reg [1-1:0] M_ge_btn_a_sig;
  reg [1-1:0] M_ge_btn_b_sig;
  reg [1-1:0] M_ge_btn_c_sig;
  reg [1-1:0] M_ge_btn_d_sig;
  reg [1-1:0] M_ge_next_player_sig;
  game_engine_3 ge (
    .clk(clk),
    .rst(rst),
    .btn_a_sig(M_ge_btn_a_sig),
    .btn_b_sig(M_ge_btn_b_sig),
    .btn_c_sig(M_ge_btn_c_sig),
    .btn_d_sig(M_ge_btn_d_sig),
    .next_player_sig(M_ge_next_player_sig),
    .current_out(M_ge_current_out),
    .target_display(M_ge_target_display),
    .a_display(M_ge_a_display),
    .b_display(M_ge_b_display),
    .c_display(M_ge_c_display),
    .d_display(M_ge_d_display)
  );
  wire [7-1:0] M_seg_a_seg;
  wire [2-1:0] M_seg_a_sel;
  reg [8-1:0] M_seg_a_values;
  multi_seven_seg_a_4 seg_a (
    .clk(clk),
    .rst(rst),
    .values(M_seg_a_values),
    .seg(M_seg_a_seg),
    .sel(M_seg_a_sel)
  );
  wire [7-1:0] M_seg_b_seg;
  wire [2-1:0] M_seg_b_sel;
  reg [8-1:0] M_seg_b_values;
  multi_seven_seg_b_5 seg_b (
    .clk(clk),
    .rst(rst),
    .values(M_seg_b_values),
    .seg(M_seg_b_seg),
    .sel(M_seg_b_sel)
  );
  wire [7-1:0] M_seg_c_seg;
  wire [2-1:0] M_seg_c_sel;
  reg [8-1:0] M_seg_c_values;
  multi_seven_seg_c_6 seg_c (
    .clk(clk),
    .rst(rst),
    .values(M_seg_c_values),
    .seg(M_seg_c_seg),
    .sel(M_seg_c_sel)
  );
  wire [7-1:0] M_seg_d_seg;
  wire [2-1:0] M_seg_d_sel;
  reg [8-1:0] M_seg_d_values;
  multi_seven_seg_d_7 seg_d (
    .clk(clk),
    .rst(rst),
    .values(M_seg_d_values),
    .seg(M_seg_d_seg),
    .sel(M_seg_d_sel)
  );
  wire [7-1:0] M_current_seg_seg;
  wire [2-1:0] M_current_seg_sel;
  reg [8-1:0] M_current_seg_values;
  multi_seven_seg_current_8 current_seg (
    .clk(clk),
    .rst(rst),
    .values(M_current_seg_values),
    .seg(M_current_seg_seg),
    .sel(M_current_seg_sel)
  );
  wire [7-1:0] M_target_seg_seg;
  wire [2-1:0] M_target_seg_sel;
  reg [8-1:0] M_target_seg_values;
  multi_seven_seg_target_9 target_seg (
    .clk(clk),
    .rst(rst),
    .values(M_target_seg_values),
    .seg(M_target_seg_seg),
    .sel(M_target_seg_sel)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    M_ge_btn_a_sig = a_button;
    M_ge_btn_b_sig = b_button;
    M_ge_btn_c_sig = c_button;
    M_ge_btn_d_sig = d_button;
    M_ge_next_player_sig = next_player_button;
    M_lookup_invalue_a = M_ge_a_display;
    M_lookup_invalue_b = M_ge_b_display;
    M_lookup_invalue_c = M_ge_c_display;
    M_lookup_invalue_d = M_ge_d_display;
    M_lookup_invalue_current = M_ge_current_out;
    M_lookup_invalue_target = M_ge_target_display;
    M_seg_a_values = {M_lookup_out_a, M_lookup_out_a1};
    M_seg_b_values = {M_lookup_out_b, M_lookup_out_b1};
    M_seg_c_values = {M_lookup_out_c, M_lookup_out_c1};
    M_seg_d_values = {M_lookup_out_d, M_lookup_out_d1};
    M_current_seg_values = {M_lookup_out_current, M_lookup_out_current1};
    M_target_seg_values = {M_lookup_out_target, M_lookup_out_target1};
    option_a = M_seg_a_seg;
    option_a_sel = ~M_seg_a_sel;
    option_b = M_seg_b_seg;
    option_b_sel = ~M_seg_b_sel;
    option_c = M_seg_c_seg;
    option_c_sel = ~M_seg_c_sel;
    option_d = M_seg_d_seg;
    option_d_sel = ~M_seg_d_sel;
    current = M_current_seg_seg;
    current_sel = ~M_current_seg_sel;
    target = M_target_seg_seg;
    target_sel = ~M_target_seg_sel;
  end
endmodule
